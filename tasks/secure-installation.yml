---
- name: Get MySQL version.
  command: 'mysql --version'
  register: mysql_cli_version
  changed_when: false

- name: Ensure default user is present.
  mysql_user:
    name: "{{ mysql_user_name }}"
    host: 'localhost'
    password: "{{ mysql_user_password }}"
    priv: '*.*:ALL,GRANT'
    state: present
  when: mysql_user_name != mysql_root_username

# Has to be after the password assignment, for idempotency.
- name: Copy user-my.cnf file with password credentials.
  template:
    src: "user-my.cnf.j2"
    dest: "{{ mysql_user_home }}/.my.cnf"
    owner: "{{ mysql_user_name }}"
    mode: 0600
  when: mysql_user_name != mysql_root_username and (mysql_install_packages | bool or mysql_user_password_update)

- name: Disallow root login remotely
  command: 'mysql -NBe "{{ item }}"'
  with_items:
    - DELETE FROM mysql.user WHERE User='{{ mysql_root_username }}' AND Host NOT IN ('localhost', '127.0.0.1', '::1')
  changed_when: false

- name: Get list of hosts for the root user.
  command: mysql -NBe "SELECT Host FROM mysql.user WHERE User = '{{ mysql_root_username }}' ORDER BY (Host='localhost') ASC"
  register: mysql_root_hosts_cmd
  changed_when: false
  always_run: true

# we need to remove any hostnames from the mysql_root_hosts if mysql_skip_name_resolve
- set_fact:
    mysql_root_hosts: "{{ mysql_root_hosts_cmd.stdout_lines }}"
- set_fact:
    mysql_root_hosts_lines: |
      {% for host in mysql_root_hosts %}
      {% if host != ansible_nodename and host != ansible_hostname  %}
      {{ host }}
      {% endif %}
      {% endfor %}
  when: mysql_skip_name_resolve|bool
- set_fact:
    mysql_root_hosts: "{{ mysql_root_hosts_lines.split('\n') }}"
  when: mysql_skip_name_resolve|bool

- set_fact:
    # added in mysql 5.7 and in mariadb 10.1
    # technically 10.2 is still RC, but I don't want keep updating this
    mysql_supports_password_api: ('5.7.' in mysql_cli_version.stdout) or ('10.1.' in mysql_cli_version.stdout) or ('10.2.' in mysql_cli_version.stdout)

# Note: We do not use mysql_user for this operation, as it doesn't always update
# the root password correctly. See: https://goo.gl/MSOejW
# Set root password for MySQL >= 5.7.x.
- name: Update MySQL root password for localhost root account (5.7.x).
  shell: >
    mysql -u root -NBe
    'ALTER USER "{{ mysql_root_username }}"@"{{ item }}" IDENTIFIED WITH mysql_native_password BY "{{ mysql_root_password }}";'
  with_items: "{{ mysql_root_hosts|default([]) }}"
  when: ((mysql_install_packages | bool) or mysql_root_password_update) and (mysql_supports_password_api | bool)

# Set root password for MySQL < 5.7.x.
- name: Update MySQL root password for localhost root account (< 5.7.x).
  shell: >
    mysql -NBe
    'SET PASSWORD FOR "{{ mysql_root_username }}"@"{{ item }}" = PASSWORD("{{ mysql_root_password }}");'
  with_items: "{{ mysql_root_hosts|default([]) }}"
  when: item != "" and ((mysql_install_packages | bool) or mysql_root_password_update) and (not mysql_supports_password_api | bool)

# Has to be after the root password assignment, for idempotency.
# If the mysql_user command fails, then we might be in a state where we cannot update
- name: Copy .my.cnf file with root password credentials.
  template:
    src: "root-my.cnf.j2"
    dest: "{{ mysql_root_home }}/.my.cnf"
    owner: root
    group: root
    mode: 0600
  when: mysql_install_packages | bool or mysql_root_password_update

- name: Get list of hosts for the anonymous user.
  command: mysql -NBe 'SELECT Host FROM mysql.user WHERE User = ""'
  register: mysql_anonymous_hosts
  changed_when: false
  always_run: true

- name: Remove anonymous MySQL users.
  mysql_user:
     name: ""
     host: "{{ item }}"
     state: absent
  with_items: "{{ mysql_anonymous_hosts.stdout_lines|default([]) }}"

- name: Remove MySQL test database.
  mysql_db: "name='test' state=absent"
